name: Publish to Nuget
on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
env:
  NUGET_TOKEN: ${{ secrets.NUGET_API_KEY }}
  DOTNET_VERSION: '6.0' # The .NET SDK version to use

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

    - name: Checkout
      uses: actions/checkout@v2
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
   
    - name: Install dependencies
      working-directory: ./src
      run: dotnet restore

    - name: Build
      working-directory: ./src
      run: dotnet build --configuration Release /p:Version=${VERSION}

    - name: Test
      working-directory: ./src
      run: dotnet test --configuration Release /p:Version=${VERSION} --no-build

    - name: Publish Coast.Core
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
          PACKAGE_NAME: Coast.Core
          PROJECT_FILE_PATH: ./src/Coast.Core/Coast.Core.csproj
          NUGET_KEY: ${{env.NUGET_TOKEN}}
          VERSION_STATIC: ${VERSION}
          TAG_COMMIT: false

    - name: Publish Coast.PostgreSql
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
          PACKAGE_NAME: Coast.PostgreSql
          PROJECT_FILE_PATH: ./src/Coast.PostgreSql/Coast.PostgreSql.csproj
          NUGET_KEY: ${{env.NUGET_TOKEN}}
          VERSION_STATIC: ${VERSION}
          TAG_COMMIT: false

    - name: Publish Coast.RabbitMQ
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
          PACKAGE_NAME: Coast.RabbitMQ
          PROJECT_FILE_PATH: ./src/Coast.RabbitMQ/Coast.RabbitMQ.csproj
          NUGET_KEY: ${{env.NUGET_TOKEN}}
          VERSION_STATIC: ${VERSION}
          TAG_COMMIT: false

